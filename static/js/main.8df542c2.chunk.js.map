{"version":3,"sources":["components/Pages/Home.jsx","firebase/initialization-firebase.js","firebase/functions-firestore.js","components/Pages/ListOrders.jsx","components/Order-view/InfoClient.jsx","components/Order-view/OrderList.jsx","components/Order-view/Product.jsx","components/Order-view/SetOrder.jsx","components/Pages/OrderView.jsx","components/Navbar.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["Home","className","to","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","getData","createOrder","order","data","collection","doc","set","client","table","time","Date","endTime","items","status","getOrder","callback","where","orderBy","onSnapshot","arrayMenu","forEach","el","push","id","getMenu","typeFood","get","then","queryResults","menu","getOrdersDone","ordersDone","getFinalTime","idDoc","timeDiff","toDate","getTime","seconds","Math","floor","minutes","parseInt","updateTime","finalTime","update","updateOrder","newStatus","Modal","setAppElement","Kitchen","props","onNotificationChange","useState","showOrder","setShowOrder","modalIsOpen","setModalIsOpen","idActive","setidActive","location","useLocation","useEffect","unmounted","map","index","getHours","getMinutes","getSeconds","pathname","element","quantity","product","type","onClick","overlayClassName","isOpen","onRequestClose","changeStatus","SetInfo","handleInputChange","resetInput","handleChange","e","target","placeholder","name","onChange","value","option","OrderList","itemProduct","onDelete","description","price","aria-hidden","role","tabIndex","Product","selectProduct","src","photo","alt","SetOrder","addOrder","cleanInput","setMenu","setOrder","item","findIndex","obj","newItem","totalOrder","reduce","acc","selectedProduct","newMenu","temporaryArray","splice","onDeleteOrderList","OrderView","nroNotifications","setNroNotifications","setTypeFood","res","length","InfoClient","Navbar","href","state","activeClassName","window","App","newNotification","concat","initialStateValues","values","setValues","path","itemsOrder","newObj","alert","component","ListOrders","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.8df542c2.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../../styles/home.css';\r\n\r\nconst Home = () => (\r\n  <div className=\"bg-home\">\r\n    <div className=\"home-view\">\r\n      <h1>¿Quién eres?</h1>\r\n      <div className=\"routes\">\r\n        <Link to=\"/waiter\">Mesero</Link>\r\n        <Link to=\"/kitchen\">Cocinero</Link>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n);\r\nexport default Home;\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyDDTLbzCMYBOP8YToX7vyZQWtrs6KtDCUI',\r\n  authDomain: 'burguer-queen-d21f6.firebaseapp.com',\r\n  projectId: 'burguer-queen-d21f6',\r\n  storageBucket: 'burguer-queen-d21f6.appspot.com',\r\n  messagingSenderId: '110811223073',\r\n  appId: '1:110811223073:web:5c8954850d5a100071ff60',\r\n};\r\n// Initialize Firebase\r\nconst fb = firebase.initializeApp(firebaseConfig);\r\nconst db = fb.firestore();\r\nexport default db;\r\n","import db from './initialization-firebase';\r\n\r\nconst getData = {\r\n\r\n  createOrder: (order, data) => {\r\n    db.collection('orders').doc().set({\r\n      client: data.client,\r\n      table: data.table,\r\n      time: new Date(),\r\n      endTime: null,\r\n      items: order,\r\n      status: 'Pending',\r\n    });\r\n  },\r\n\r\n  getOrder: (callback, status) => {\r\n    db.collection('orders').where('status', '==', status).orderBy('time', 'desc').onSnapshot((doc) => {\r\n      const arrayMenu = [];\r\n      doc.forEach((el) => {\r\n        arrayMenu.push({\r\n          id: el.id,\r\n          ...el.data(),\r\n        });\r\n      });\r\n      callback(arrayMenu);\r\n    });\r\n  },\r\n\r\n  getMenu: (typeFood) => db.collection('items').where('menu', '==', typeFood).get()\r\n    .then((queryResults) => {\r\n      const menu = [];\r\n      queryResults.forEach((doc) => {\r\n        menu.push({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        });\r\n      });\r\n      return menu;\r\n    }),\r\n\r\n  getOrdersDone: () => db.collection('orders').where('status', '==', 'Done').get()\r\n    .then((queryResults) => {\r\n      const ordersDone = [];\r\n      queryResults.forEach((doc) => {\r\n        ordersDone.push(doc.data());\r\n      });\r\n      return ordersDone;\r\n    }),\r\n\r\n  getFinalTime: (idDoc) => db.collection('orders').doc(idDoc).get()\r\n    .then((order) => {\r\n      const timeDiff = order.data().endTime.toDate().getTime()\r\n        - order.data().time.toDate().getTime();\r\n      let seconds = Math.floor(timeDiff / 1000);\r\n      // eslint-disable-next-line radix\r\n      const minutes = parseInt(seconds / 60);\r\n      seconds %= 60;\r\n\r\n      const finalTime = `${minutes}:${seconds}`;\r\n      return finalTime;\r\n    }),\r\n\r\n  updateTime: (id, finalTime) => db.collection('orders').doc(id)\r\n    .update({\r\n      finalTime,\r\n    }),\r\n\r\n  updateOrder: (idDoc, newStatus) => {\r\n    db.collection('orders').doc(idDoc)\r\n      .update({\r\n        endTime: new Date(),\r\n        status: newStatus,\r\n      });\r\n  },\r\n\r\n};\r\n\r\nexport default getData;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport Modal from 'react-modal';\r\nimport '../../styles/listOrders.css';\r\nimport getData from '../../firebase/functions-firestore';\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst Kitchen = (props) => {\r\n  const { onNotificationChange, status } = props;\r\n  const [showOrder, setShowOrder] = useState([]);\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n  const [idActive, setidActive] = useState();\r\n  const location = useLocation();\r\n  useEffect(() => {\r\n    let unmounted = false;\r\n\r\n    getData.getOrder((data) => {\r\n      if (!unmounted) {\r\n        setShowOrder(data);\r\n      }\r\n    }, status);\r\n\r\n    return () => { unmounted = true; };\r\n  }, []);\r\n\r\n  const changeStatus = (id) => {\r\n    const endTime = new Date();\r\n\r\n    getData.updateOrder(id, endTime);\r\n    getData.getFinalTime(id).then((finalTime) => {\r\n      getData.updateTime(id, finalTime);\r\n    });\r\n\r\n    const newDone = [id];\r\n    onNotificationChange(newDone);\r\n    const done = 'Done';\r\n    const delivered = 'Delivered';\r\n    if (location.pathname === '/kitchen') {\r\n      getData.updateOrder(id, done);\r\n    } else {\r\n      getData.updateOrder(id, delivered);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className=\"list-orders-section\">\r\n      {showOrder.map((order, index) => (\r\n        <div key={order.id} className=\"orders\">\r\n          <div className=\"order-number\">\r\n            <p>\r\n              Nro.\r\n              {index + 1}\r\n            </p>\r\n          </div>\r\n          <div className=\"detailes-order\">\r\n            <p>{order.table}</p>\r\n            {order.endTime === null ? ''\r\n              : (\r\n                <p className=\"timer\">\r\n                  {order.finalTime}\r\n                </p>\r\n              )}\r\n            <p>\r\n              {new Date(order.time.seconds * 1000).getHours()}\r\n              :\r\n              {new Date(order.time.seconds * 1000).getMinutes()}\r\n              :\r\n              {new Date(order.time.seconds * 1000).getSeconds()}\r\n\r\n            </p>\r\n          </div>\r\n          {(location.pathname === '/delivery')\r\n            ? (\r\n              <p>\r\n                Cliente:\r\n                {order.client}\r\n              </p>\r\n            ) : ''}\r\n          <ul className=\"items-order\">\r\n            {order.items.map((element) => (\r\n              <li className=\"items-order-detail\" key={element.id}>\r\n                <p>{element.quantity}</p>\r\n                <p>{element.product}</p>\r\n              </li>\r\n            ))}\r\n\r\n          </ul>\r\n          <button\r\n            type=\"button\"\r\n            className={order.status}\r\n            onClick={() => {\r\n              setidActive(order.id);\r\n              setModalIsOpen(true);\r\n            }}\r\n          >\r\n            {order.status}\r\n          </button>\r\n        </div>\r\n      ))}\r\n      <Modal\r\n        className=\"Modal\"\r\n        overlayClassName=\"Overlay\"\r\n        isOpen={modalIsOpen}\r\n        onRequestClose={() => setModalIsOpen(false)}\r\n      >\r\n        <h2>\r\n          ¿Are you sure?\r\n        </h2>\r\n        <div className=\"buttons-modal\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => setModalIsOpen(false)}\r\n          >\r\n            Close\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => {\r\n              changeStatus(idActive);\r\n              setModalIsOpen(false);\r\n            }}\r\n          >\r\n            Yes\r\n          </button>\r\n        </div>\r\n      </Modal>\r\n    </section>\r\n  );\r\n};\r\n\r\nKitchen.propTypes = {\r\n  onNotificationChange: PropTypes.string.isRequired,\r\n  status: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Kitchen;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SetInfo = (props) => {\r\n  const { handleInputChange, resetInput } = props;\r\n\r\n  const options = ['Select a table', 'A1', 'A2', 'A3'];\r\n  const handleChange = (e) => {\r\n    handleInputChange(e.target);\r\n  };\r\n  return (\r\n    <div className=\"input-section\">\r\n      <input\r\n        className=\"input\"\r\n        type=\"text\"\r\n        placeholder=\"Client name\"\r\n        name=\"client\"\r\n        onChange={handleChange}\r\n        value={resetInput.client}\r\n      />\r\n      <select\r\n        className=\"select\"\r\n        name=\"table\"\r\n        onChange={handleChange}\r\n        value={resetInput.table}\r\n      >\r\n        {options.map((option) => <option value={option} key={option}>{option}</option>)}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nSetInfo.propTypes = {\r\n  handleInputChange: PropTypes.func.isRequired,\r\n  resetInput: PropTypes.shape.isRequired,\r\n};\r\n\r\nexport default SetInfo;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst OrderList = (props) => {\r\n  const { itemProduct, onDelete } = props;\r\n\r\n  return (\r\n    <li className=\"item-order\">\r\n      <p className=\"item-quantity\">{itemProduct.quantity}</p>\r\n      <p className=\"order-name\">\r\n        {itemProduct.description}\r\n      </p>\r\n      <p className=\"order-price\">\r\n        S/.\r\n        {itemProduct.price}\r\n      </p>\r\n      <span\r\n        className=\"material-icons order\"\r\n        onClick={() => (onDelete(itemProduct))}\r\n        aria-hidden=\"true\"\r\n        role=\"button\"\r\n        tabIndex={0}\r\n      >\r\n        delete_outline\r\n      </span>\r\n    </li>\r\n  );\r\n};\r\n\r\nOrderList.propTypes = {\r\n  itemProduct: PropTypes.shape.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default OrderList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Product = (props) => {\r\n  const { selectProduct, itemProduct } = props;\r\n\r\n  return (\r\n    <div\r\n      className=\"item-product\"\r\n      onClick={() => (selectProduct(itemProduct))}\r\n      aria-hidden=\"true\"\r\n      role=\"button\"\r\n      tabIndex={0}\r\n    >\r\n      <p className=\"item-name\">\r\n        {itemProduct.description}\r\n      </p>\r\n      <p className=\"item-price\">\r\n        S/.\r\n        {itemProduct.price}\r\n      </p>\r\n      <img className=\"item-img\" src={itemProduct.photo} alt=\"img-product\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nProduct.propTypes = {\r\n  selectProduct: PropTypes.func.isRequired,\r\n  itemProduct: PropTypes.shape.isRequired,\r\n};\r\n\r\nexport default Product;\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport OrderList from './OrderList';\r\nimport Product from './Product';\r\nimport getData from '../../firebase/functions-firestore';\r\n\r\nconst SetOrder = (props) => {\r\n  const { typeFood, addOrder, cleanInput } = props;\r\n\r\n  const [menu, setMenu] = useState([]);\r\n  const [order, setOrder] = useState([]);\r\n\r\n  function selectProduct(item) {\r\n    const existProduct = order.findIndex((el) => el.id === item.id);\r\n    if (existProduct !== -1) {\r\n      setOrder(\r\n        order.map((obj) => (obj.id\r\n          === item.id ? { ...obj, quantity: obj.quantity + 1 } : obj)),\r\n      );\r\n    } else {\r\n      const newItem = { ...item, quantity: 1 };\r\n      setOrder([...order, newItem]);\r\n    }\r\n  }\r\n\r\n  const totalOrder = order.reduce(\r\n    (acc, selectedProduct) => acc + (selectedProduct.price * selectedProduct.quantity), 0,\r\n  );\r\n\r\n  const onDeleteOrderList = (index) => {\r\n    const temporaryArray = [...order];\r\n    temporaryArray.splice(index, 1);\r\n    setOrder(temporaryArray);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData.getMenu(props.typeFood).then((newMenu) => {\r\n      setMenu(newMenu);\r\n    });\r\n  }, [typeFood]);\r\n\r\n  const cleanOrder = () => {\r\n    setOrder([]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ul className=\"display-list-product\">\r\n        {menu.map((item) => (\r\n          <Product\r\n            key={item.id}\r\n            itemProduct={item}\r\n            selectProduct={selectProduct}\r\n          />\r\n        ))}\r\n      </ul>\r\n\r\n      <ul className=\"display-list-order\">\r\n        <div className=\"each-list-order\">\r\n          {order.map((item, index) => (\r\n            <OrderList\r\n              key={item.id}\r\n              itemProduct={item}\r\n              onDelete={() => onDeleteOrderList(index)}\r\n            />\r\n          ))}\r\n        </div>\r\n        <div className=\"price-total\">\r\n          Total S/.\r\n          {totalOrder}\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          className=\"button\"\r\n          onClick={() => {\r\n            addOrder(order);\r\n            cleanInput();\r\n            cleanOrder();\r\n          }}\r\n        >\r\n          Tomar pedido\r\n        </button>\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nSetOrder.propTypes = {\r\n  typeFood: PropTypes.string.isRequired,\r\n  addOrder: PropTypes.func.isRequired,\r\n  cleanInput: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SetOrder;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport InfoClient from '../Order-view/InfoClient';\r\nimport SetOrder from '../Order-view/SetOrder';\r\nimport getData from '../../firebase/functions-firestore';\r\nimport '../../styles/orderView.css';\r\n\r\nconst OrderView = (props) => {\r\n  const {\r\n    handleInputChange, resetInput, addOrder, cleanInput,\r\n  } = props;\r\n\r\n  const [nroNotifications, setNroNotifications] = useState();\r\n  const [typeFood, setTypeFood] = useState('desayuno');\r\n\r\n  const ordersDone = getData.getOrdersDone();\r\n  ordersDone.then((res) => {\r\n    setNroNotifications(res.length);\r\n  });\r\n\r\n  return (\r\n    <section className=\"order-view-section\">\r\n      <div className=\"btn-section\">\r\n        <button type=\"button\" className=\"button menu\" onClick={() => { setTypeFood('desayuno'); }}>Desayuno</button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"button menu\"\r\n          onClick={() => { setTypeFood('almuerzo y cena'); }}\r\n        >\r\n          Almuerzo y cena\r\n        </button>\r\n      </div>\r\n      <div className=\"notifications\">\r\n        <p>{nroNotifications}</p>\r\n        <span className=\"material-icons notification-order-done\">\r\n          notifications\r\n        </span>\r\n      </div>\r\n      <InfoClient handleInputChange={handleInputChange} resetInput={resetInput} />\r\n      <SetOrder typeFood={typeFood} addOrder={addOrder} cleanInput={cleanInput} />\r\n    </section>\r\n  );\r\n};\r\n\r\nOrderView.propTypes = {\r\n  handleInputChange: PropTypes.func.isRequired,\r\n  resetInput: PropTypes.func.isRequired,\r\n  addOrder: PropTypes.func.isRequired,\r\n  cleanInput: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default OrderView;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { NavLink } from 'react-router-dom';\r\nimport '../styles/App.css';\r\n\r\nconst Navbar = (props) => {\r\n  const { nroNotifications } = props;\r\n\r\n  return (\r\n    <header>\r\n      <a href=\"/\">\r\n        <img src=\"https://user-images.githubusercontent.com/68167686/103605203-4e1c0780-4ee1-11eb-8c96-0d1379f88bf5.png\" alt=\"\" />\r\n      </a>\r\n      <nav className=\"directions-links\">\r\n        <ul>\r\n          <li>\r\n            <NavLink\r\n              to={{\r\n                pathname: '/waiter',\r\n                state: nroNotifications,\r\n              }}\r\n              activeClassName=\"active\"\r\n            >\r\n              Waiter\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/kitchen\" activeClassName=\"active\" key={window.location.pathname}>Kitchen</NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/delivery\" activeClassName=\"active\" key={window.location.pathname}>Delivery</NavLink>\r\n          </li>\r\n        </ul>\r\n\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nNavbar.propTypes = {\r\n  nroNotifications: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Switch,\r\n  Route,\r\n} from 'react-router-dom';\r\nimport Home from './components/Pages/Home';\r\nimport ListOrders from './components/Pages/ListOrders';\r\nimport OrderView from './components/Pages/OrderView';\r\nimport Navbar from './components/Navbar';\r\nimport getData from './firebase/functions-firestore';\r\n\r\nconst App = () => {\r\n  const [nroNotifications, setNroNotifications] = useState([]);\r\n\r\n  const onNotificationChange = (newNotification) => {\r\n    setNroNotifications(nroNotifications.concat(newNotification));\r\n  };\r\n  const initialStateValues = {\r\n    client: '',\r\n    table: '',\r\n  };\r\n  const status = {\r\n    pending: 'Pending',\r\n    done: 'Done',\r\n    delivered: 'Delivered',\r\n  };\r\n  const [values, setValues] = useState(initialStateValues);\r\n\r\n  const cleanInput = () => {\r\n    setValues({ ...initialStateValues });\r\n  };\r\n\r\n  const handleInput = (data) => {\r\n    const { name, value } = data;\r\n    setValues({ ...values, [name]: value });\r\n  };\r\n\r\n  const addOrder = (order) => {\r\n    const itemsOrder = order.map((element) => {\r\n      const newObj = {};\r\n      newObj.product = element.description;\r\n      newObj.quantity = element.quantity;\r\n      return newObj;\r\n    });\r\n\r\n    if (values === initialStateValues || itemsOrder.length === 0) {\r\n      // eslint-disable-next-line no-alert\r\n      alert('Termine de completar para registrar su orden');\r\n    } else {\r\n      getData.createOrder(itemsOrder, values);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navbar nroNotifications={nroNotifications} />\r\n\r\n      <Switch>\r\n        <Route path=\"/waiter\">\r\n          <OrderView\r\n            addOrder={addOrder}\r\n            handleInputChange={handleInput}\r\n            resetInput={values}\r\n            cleanInput={cleanInput}\r\n          />\r\n        </Route>\r\n        <Route\r\n          path=\"/kitchen\"\r\n          component={() => (\r\n            <ListOrders\r\n              onNotificationChange={onNotificationChange}\r\n              status={status.pending}\r\n            />\r\n          )}\r\n        />\r\n        <Route\r\n          path=\"/delivery\"\r\n          component={() => (\r\n            <ListOrders\r\n              onNotificationChange={onNotificationChange}\r\n              status={status.done}\r\n            />\r\n          )}\r\n        />\r\n        <Route path=\"/\">\r\n          <Home />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({\r\n      getCLS, getFID, getFCP, getLCP, getTTFB,\r\n    }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './firebase/initialization-firebase';\r\n\r\nReactDOM.render(\r\n  <Router basename={process.env.PUBLIC_URL}>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}